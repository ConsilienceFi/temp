gptengineer.js:1 [FIREBASE] Initializing Firebase with config: {projectId: 'careerday-ai', storageBucket: 'careerday-ai.appspot.com', authDomain: 'careerday-ai.firebaseapp.com'}
gptengineer.js:1 [FIREBASE] Firebase app initialized successfully
gptengineer.js:1 [FIREBASE] Firebase auth initialized successfully
gptengineer.js:1 [FIREBASE] Firebase Firestore initialized successfully
gptengineer.js:1 [FIREBASE] Firestore instance type: object
gptengineer.js:1 [FIREBASE] Firestore instance available: true
gptengineer.js:1 [FIREBASE] Firebase Storage initialized successfully: FirebaseStorageImpl {app: FirebaseAppImpl, _authProvider: Provider, _appCheckProvider: Provider, _url: undefined, _firebaseVersion: '10.14.1', …}
gptengineer.js:1 [firestoreUtils] Collection names defined as: {INTERVIEW_QUESTIONS: 'interviewQuestions', INTERVIEW_SESSIONS: 'interviewPrepSessions', QUESTION_BANK: 'questionBank', USER_QUESTION_HISTORY: 'userQuestionHistory'}
gptengineer.js:1 [questionStore] Initializing collections on store creation
gptengineer.js:1 [firestoreUtils] Initializing all required collections
gptengineer.js:1 [firestoreUtils] Ensuring collection exists: interviewQuestions
gptengineer.js:1 [firestoreUtils] Got collection reference for: interviewQuestions
gptengineer.js:1 [firestoreUtils] Ensuring collection exists: questionBank
gptengineer.js:1 [firestoreUtils] Got collection reference for: questionBank
gptengineer.js:1 [firestoreUtils] Ensuring collection exists: interviewPrepSessions
gptengineer.js:1 [firestoreUtils] Got collection reference for: interviewPrepSessions
gptengineer.js:1 [firestoreUtils] Ensuring collection exists: userQuestionHistory
gptengineer.js:1 [firestoreUtils] Got collection reference for: userQuestionHistory
gptengineer.js:1 [firestoreUtils] All required collections initialized
gptengineer.js:1 [questionStore] Collections initialized successfully
gptengineer.js:1 [AuthContext] Provider rendering {isLoading: true, isAuthenticated: false, firebaseUserId: undefined, userId: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useFeatureAccess] User not on paid plan, using default free plan
gptengineer.js:1 [useSubscription] Auth still loading, deferring fetch
gptengineer.js:1 MainLayout - Auth State: {isAuthenticated: false, isLoading: true, userId: undefined, userName: undefined, isMobile: false}
gptengineer.js:1 [useFeatureAccess] User not on paid plan, using default free plan
gptengineer.js:1 [useSubscription] Auth still loading, deferring fetch
gptengineer.js:1 [useFeatureAccess] User not on paid plan, using default free plan
gptengineer.js:1 [useFeatureAccess] User not on paid plan, using default free plan
gptengineer.js:1 [useSubscription] Auth still loading, deferring fetch
gptengineer.js:1 [AuthContext] Setting up auth state listener
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 Auth state changed: Loading saved jobs for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 Initializing saved jobs for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 Loading saved jobs for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [AuthContext] Auth state changed: User is signed in VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [AuthContext] Initial load - setting loading to true
gptengineer.js:1 [AuthContext] Fetching user data from Firestore
gptengineer.js:1 Getting user data for: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [AuthContext] Provider rendering {isLoading: true, isAuthenticated: false, firebaseUserId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', userId: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 User data retrieved successfully
 [AuthContext] User data loaded successfully Adnan Al-Ghourabi
 [AuthContext] New user detected, clearing search state
 [jobStore] Clearing all search state due to auth change
 [AuthContext] Auth store updated with user data
 [AuthContext] Auth state processing complete, setting loading to false
 [AuthContext] Updating authStore loading state
 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useFeatureAccess] Setting plan ID from user object: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [resumeDebugger] Getting resume count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useFeatureAccess] Setting plan ID from user object: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [resumeDebugger] Getting resume count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useFeatureAccess] Setting plan ID from user object: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [resumeDebugger] Getting resume count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useFeatureAccess] Setting plan ID from user object: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [resumeDebugger] Getting resume count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [AuthContext] Provider rendering {isLoading: false, isAuthenticated: true, firebaseUserId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2'}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 Actual saved jobs count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2: 20
 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
 [useSubscription] PlanId changed from undefined to El3UoOu4Luk6JtG1gvjo, triggering refresh
 [useProfileDbSync] Force refresh called (#1)
gptengineer.js:1 [useProfileDbSync] Directly fetching latest subscription data from Firestore
gptengineer.js:1 [useSubscription] Auth ready, initiating first fetch
gptengineer.js:1 [useSubscription] Fetch skipped - already in progress or unmounted
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useFeatureAccess] Setting plan ID from user object: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [resumeDebugger] Getting resume count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useSubscription] Auth ready, initiating first fetch
gptengineer.js:1 [useSubscription] Starting data fetch {userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', path: '/saved-jobs', initialLoadDone: false, userPlanId: 'El3UoOu4Luk6JtG1gvjo', userIsPremium: false, …}
gptengineer.js:1 [planCacheService] Forcing cache refresh
gptengineer.js:1 [planCacheService] Cache miss or stale - fetching fresh plans
gptengineer.js:1 [subscriptionPlansService] Fetching subscription plans from Firestore
gptengineer.js:1 [useSubscription] Force refresh - waiting for current operation to complete
gptengineer.js:1 MainLayout - Auth State: {isAuthenticated: true, isLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', userName: 'Adnan Al-Ghourabi', isMobile: false}
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useSubscription] PlanId changed from undefined to El3UoOu4Luk6JtG1gvjo, triggering refresh
gptengineer.js:1 [useProfileDbSync] Force refresh called (#1)
gptengineer.js:1 [useProfileDbSync] Directly fetching latest subscription data from Firestore
gptengineer.js:1 [useSubscription] Auth ready, initiating first fetch
gptengineer.js:1 [useSubscription] Fetch skipped - already in progress or unmounted
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useSubscription] PlanId changed from undefined to El3UoOu4Luk6JtG1gvjo, triggering refresh
gptengineer.js:1 [useProfileDbSync] Force refresh called (#1)
gptengineer.js:1 [useProfileDbSync] Directly fetching latest subscription data from Firestore
gptengineer.js:1 [useSubscription] Auth ready, initiating first fetch
gptengineer.js:1 [useSubscription] Fetch skipped - already in progress or unmounted
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Force refresh - waiting for current operation to complete
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 (forced refresh)
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 (forced refresh)
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 (forced refresh)
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 (forced refresh)
gptengineer.js:1 Updated user VDNSMeBPlkP7vzzxxr4uX8Sso9t2 savedJobsCount to 20
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
 [resumeDebugger] Resume data: {userData: {…}, resumeCount: 0, plan: undefined, userPlanId: 'El3UoOu4Luk6JtG1gvjo'}
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Got resume limit from plan service: 1 for plan El3UoOu4Luk6JtG1gvjo
 [useFeatureAccess] Refreshed resume count: 0
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Resume data: {userData: {…}, resumeCount: 0, plan: undefined, userPlanId: 'El3UoOu4Luk6JtG1gvjo'}
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Got resume limit from plan service: 1 for plan El3UoOu4Luk6JtG1gvjo
 [useFeatureAccess] Refreshed resume count: 0
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Resume data: {userData: {…}, resumeCount: 0, plan: undefined, userPlanId: 'El3UoOu4Luk6JtG1gvjo'}
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Got resume limit from plan service: 1 for plan El3UoOu4Luk6JtG1gvjo
 [useFeatureAccess] Refreshed resume count: 0
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Resume data: {userData: {…}, resumeCount: 0, plan: undefined, userPlanId: 'El3UoOu4Luk6JtG1gvjo'}
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Got resume limit from plan service: 1 for plan El3UoOu4Luk6JtG1gvjo
 [useFeatureAccess] Refreshed resume count: 0
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Resume data: {userData: {…}, resumeCount: 0, plan: undefined, userPlanId: 'El3UoOu4Luk6JtG1gvjo'}
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [resumeDebugger] Got resume limit from plan service: 1 for plan El3UoOu4Luk6JtG1gvjo
 [useFeatureAccess] Refreshed resume count: 0
 [FeatureMatrixService] Available plans in matrix: []
 [FeatureMatrixService] No feature found for El3UoOu4Luk6JtG1gvjo.resumes, using default
 [useProfileDbSync] Force refresh directly fetched latest plan: El3UoOu4Luk6JtG1gvjo
 [useProfileDbSync] Skipping update - current plan: El3UoOu4Luk6JtG1gvjo and new plan: El3UoOu4Luk6JtG1gvjo are compatible
 [useProfileDbSync] Force refresh directly fetched latest plan: El3UoOu4Luk6JtG1gvjo
 [useProfileDbSync] Skipping update - current plan: El3UoOu4Luk6JtG1gvjo and new plan: El3UoOu4Luk6JtG1gvjo are compatible
 [useProfileDbSync] Force refresh directly fetched latest plan: El3UoOu4Luk6JtG1gvjo
 [useProfileDbSync] Skipping update - current plan: El3UoOu4Luk6JtG1gvjo and new plan: El3UoOu4Luk6JtG1gvjo are compatible
 [subscriptionPlansService] Successfully fetched 4 plans from Firestore
 [planCacheService] Found free plan by type: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [planCacheService] Fetched plans: (4) [{…}, {…}, {…}, {…}]
gptengineer.js:1 [planCacheService] Initializing feature matrix with fresh plans
gptengineer.js:1 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
gptengineer.js:1 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
gptengineer.js:1 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: ebeWD5tjAUTPEo6Tq81y {name: 'Diamond', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan ebeWD5tjAUTPEo6Tq81y, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: d7pgVke5W5VRe8gVa1Qy {name: 'Platinum', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan d7pgVke5W5VRe8gVa1Qy, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: (4) ['krEnfmvKPme5JTQNZ6Sq', 'El3UoOu4Luk6JtG1gvjo', 'ebeWD5tjAUTPEo6Tq81y', 'd7pgVke5W5VRe8gVa1Qy']
gptengineer.js:1 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
gptengineer.js:1 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
gptengineer.js:1 [FeatureMatrixService] Plan ebeWD5tjAUTPEo6Tq81y has savedJobs limit: 9999
gptengineer.js:1 [FeatureMatrixService] Plan d7pgVke5W5VRe8gVa1Qy has savedJobs limit: 9999
gptengineer.js:1 [planCacheService] Using cached plans
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: El3UoOu4Luk6JtG1gvjo
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: undefined, currentPlanPrice: undefined}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionStore] Loaded 4 plans from cache or Firestore
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useFeatureAccess] Setting plan ID from paid user: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [resumeDebugger] Getting resume count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [subscriptionStore] Refreshing plan for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Starting forced refresh {userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', planId: 'El3UoOu4Luk6JtG1gvjo', isPremium: false}
gptengineer.js:1 [useSubscription] Clearing browser cache for subscription data
gptengineer.js:1 [useFeatureAccess] Refreshed saved jobs count: 20
gptengineer.js:1 [useSubscription] Starting forced refresh {userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', planId: 'El3UoOu4Luk6JtG1gvjo', isPremium: false}
gptengineer.js:1 [useSubscription] Clearing browser cache for subscription data
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useFeatureAccess] Refreshed saved jobs count: 20
gptengineer.js:1 [useFeatureAccess] Refreshed saved jobs count: 20
gptengineer.js:1 [useFeatureAccess] Refreshed saved jobs count: 20
gptengineer.js:1 [useFeatureAccess] Refreshed saved jobs count: 20
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 at 2025-04-20T18:52:19.279Z
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 at 2025-04-20T18:52:19.280Z
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 at 2025-04-20T18:52:19.281Z
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 at 2025-04-20T18:52:19.282Z
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [useSubscription] Force refresh - waiting for current operation to complete
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [resumeDebugger] Resume data: {userData: {…}, resumeCount: 0, plan: undefined, userPlanId: 'El3UoOu4Luk6JtG1gvjo'}
 [resumeDebugger] Got resume limit from plan service: 5 for plan El3UoOu4Luk6JtG1gvjo
 [useFeatureAccess] Refreshed resume count: 0
 [planCacheService] Forcing cache refresh
 [planCacheService] Cache miss or stale - fetching fresh plans
 [subscriptionPlansService] Fetching subscription plans from Firestore
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [planCacheService] Forcing cache refresh
gptengineer.js:1 [planCacheService] Cache miss or stale - fetching fresh plans
gptengineer.js:1 [subscriptionPlansService] Fetching subscription plans from Firestore
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [useFeatureAccess] Refreshed saved jobs count: 20
 [planCacheService] Cache miss for plan El3UoOu4Luk6JtG1gvjo - fetching from database
 [planCacheService] Cache miss for plan El3UoOu4Luk6JtG1gvjo - fetching from database
 [planCacheService] Cache miss for plan El3UoOu4Luk6JtG1gvjo - fetching from database
 [planCacheService] Cache miss for plan El3UoOu4Luk6JtG1gvjo - fetching from database
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [subscriptionPlansService] Successfully fetched 4 plans from Firestore
 [planCacheService] Found free plan by type: krEnfmvKPme5JTQNZ6Sq
 [planCacheService] Fetched plans: (4) [{…}, {…}, {…}, {…}]
 [planCacheService] Initializing feature matrix with fresh plans
 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
 [FeatureMatrixService] Adding plan to matrix: ebeWD5tjAUTPEo6Tq81y {name: 'Diamond', savedJobsLimit: 9999}
 [FeatureMatrixService] Converting plan ebeWD5tjAUTPEo6Tq81y, savedJobs: 9999
 [FeatureMatrixService] Adding plan to matrix: d7pgVke5W5VRe8gVa1Qy {name: 'Platinum', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan d7pgVke5W5VRe8gVa1Qy, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: (4) ['krEnfmvKPme5JTQNZ6Sq', 'El3UoOu4Luk6JtG1gvjo', 'ebeWD5tjAUTPEo6Tq81y', 'd7pgVke5W5VRe8gVa1Qy']
gptengineer.js:1 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
gptengineer.js:1 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
gptengineer.js:1 [FeatureMatrixService] Plan ebeWD5tjAUTPEo6Tq81y has savedJobs limit: 9999
gptengineer.js:1 [FeatureMatrixService] Plan d7pgVke5W5VRe8gVa1Qy has savedJobs limit: 9999
gptengineer.js:1 [subscriptionStore] Refreshing plan for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [subscriptionPlansService] Successfully fetched 4 plans from Firestore
gptengineer.js:1 [planCacheService] Found free plan by type: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [planCacheService] Fetched plans: (4) [{…}, {…}, {…}, {…}]
gptengineer.js:1 [planCacheService] Initializing feature matrix with fresh plans
gptengineer.js:1 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
gptengineer.js:1 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
gptengineer.js:1 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: ebeWD5tjAUTPEo6Tq81y {name: 'Diamond', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan ebeWD5tjAUTPEo6Tq81y, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: d7pgVke5W5VRe8gVa1Qy {name: 'Platinum', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan d7pgVke5W5VRe8gVa1Qy, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: (4) ['krEnfmvKPme5JTQNZ6Sq', 'El3UoOu4Luk6JtG1gvjo', 'ebeWD5tjAUTPEo6Tq81y', 'd7pgVke5W5VRe8gVa1Qy']
gptengineer.js:1 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
gptengineer.js:1 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
gptengineer.js:1 [FeatureMatrixService] Plan ebeWD5tjAUTPEo6Tq81y has savedJobs limit: 9999
gptengineer.js:1 [FeatureMatrixService] Plan d7pgVke5W5VRe8gVa1Qy has savedJobs limit: 9999
gptengineer.js:1 [subscriptionStore] Refreshing plan for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
 Found subscription: {planId: 'El3UoOu4Luk6JtG1gvjo', startDate: _Timestamp, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', status: 'active', lastUpdated: _Timestamp, …}
 [subscriptionCoreService] Got searchLimit: 10 (type: number) from subscription
 [subscriptionStore] Found subscription with plan: El3UoOu4Luk6JtG1gvjo
 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [subscriptionStore] Setting limits for plan: El3UoOu4Luk6JtG1gvjo {"savedJobs":20,"resumes":5,"jobApplications":20,"tailoredResumes":10,"searches":10}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionStore] Setting search limit from subscription: 10
 [subscriptionStore] Getting daily search count for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [planCacheService] Fetched plan from database for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [planCacheService] Found savedJobs limit in database: 20 (number)
 [FeatureMatrixService] Set default plan ID to first available plan: El3UoOu4Luk6JtG1gvjo
 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
 [FeatureMatrixService] Initialized matrix with plans: ['El3UoOu4Luk6JtG1gvjo']
 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using subscription limit: 10
 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
 [subscriptionDebugger] Got FRESH search count: {count: 10, limit: 10, hasReachedLimit: true, countType: 'number', limitType: 'number'}
 [useDailySearchCount] Updated counts: {count: 10, limit: 10, countType: 'number', limitType: 'number'}
 [planCacheService] Fetched plan from database for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [planCacheService] Found savedJobs limit in database: 20 (number)
 [FeatureMatrixService] Set default plan ID to first available plan: El3UoOu4Luk6JtG1gvjo
 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
 [FeatureMatrixService] Initialized matrix with plans: ['El3UoOu4Luk6JtG1gvjo']
 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using subscription limit: 10
gptengineer.js:1 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
gptengineer.js:1 [subscriptionDebugger] Got FRESH search count: {count: 10, limit: 10, hasReachedLimit: true, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 10, limit: 10, countType: 'number', limitType: 'number'}
gptengineer.js:1 [planCacheService] Fetched plan from database for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
gptengineer.js:1 [planCacheService] Found savedJobs limit in database: 20 (number)
gptengineer.js:1 [FeatureMatrixService] Set default plan ID to first available plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
gptengineer.js:1 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: ['El3UoOu4Luk6JtG1gvjo']
gptengineer.js:1 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
gptengineer.js:1 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
gptengineer.js:1 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
gptengineer.js:1 [searchTrackingService] Raw count value from database: 10
gptengineer.js:1 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using subscription limit: 10
gptengineer.js:1 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
gptengineer.js:1 [subscriptionDebugger] Got FRESH search count: {count: 10, limit: 10, hasReachedLimit: true, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 10, limit: 10, countType: 'number', limitType: 'number'}
gptengineer.js:1 [planCacheService] Fetched plan from database for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
gptengineer.js:1 [planCacheService] Found savedJobs limit in database: 20 (number)
gptengineer.js:1 [FeatureMatrixService] Set default plan ID to first available plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
gptengineer.js:1 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: ['El3UoOu4Luk6JtG1gvjo']
gptengineer.js:1 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using subscription limit: 10
 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
 [subscriptionDebugger] Got FRESH search count: {count: 10, limit: 10, hasReachedLimit: true, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 10, limit: 10, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Starting forced refresh {userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', planId: 'El3UoOu4Luk6JtG1gvjo', isPremium: false}
gptengineer.js:1 [useSubscription] Clearing browser cache for subscription data
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [planCacheService] Forcing cache refresh
gptengineer.js:1 [planCacheService] Cache miss or stale - fetching fresh plans
gptengineer.js:1 [subscriptionPlansService] Fetching subscription plans from Firestore
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionPlansService] Successfully fetched 4 plans from Firestore
 [planCacheService] Found free plan by type: krEnfmvKPme5JTQNZ6Sq
 [planCacheService] Fetched plans: (4) [{…}, {…}, {…}, {…}]
 [planCacheService] Initializing feature matrix with fresh plans
gptengineer.js:1 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
gptengineer.js:1 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
gptengineer.js:1 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: ebeWD5tjAUTPEo6Tq81y {name: 'Diamond', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan ebeWD5tjAUTPEo6Tq81y, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: d7pgVke5W5VRe8gVa1Qy {name: 'Platinum', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan d7pgVke5W5VRe8gVa1Qy, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: (4) ['krEnfmvKPme5JTQNZ6Sq', 'El3UoOu4Luk6JtG1gvjo', 'ebeWD5tjAUTPEo6Tq81y', 'd7pgVke5W5VRe8gVa1Qy']
gptengineer.js:1 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
gptengineer.js:1 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
gptengineer.js:1 [FeatureMatrixService] Plan ebeWD5tjAUTPEo6Tq81y has savedJobs limit: 9999
gptengineer.js:1 [FeatureMatrixService] Plan d7pgVke5W5VRe8gVa1Qy has savedJobs limit: 9999
gptengineer.js:1 [subscriptionStore] Refreshing plan for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 Found subscription: {searchLimit: 10, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', lastUpdated: _Timestamp, startDate: _Timestamp, status: 'active', …}
gptengineer.js:1 [subscriptionCoreService] Got searchLimit: 10 (type: number) from subscription
gptengineer.js:1 [subscriptionStore] Found subscription with plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
gptengineer.js:1 [subscriptionStore] Setting limits for plan: El3UoOu4Luk6JtG1gvjo {"tailoredResumes":10,"resumes":5,"searches":10,"jobApplications":20,"savedJobs":20}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionStore] Setting search limit from subscription: 10
 [subscriptionStore] Getting daily search count for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 Found subscription: {searchLimit: 10, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', lastUpdated: _Timestamp, startDate: _Timestamp, status: 'active', …}
 [subscriptionCoreService] Got searchLimit: 10 (type: number) from subscription
 [subscriptionStore] Found subscription with plan: El3UoOu4Luk6JtG1gvjo
 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
gptengineer.js:1 [subscriptionStore] Setting limits for plan: El3UoOu4Luk6JtG1gvjo {"tailoredResumes":10,"resumes":5,"searches":10,"jobApplications":20,"savedJobs":20}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionStore] Setting search limit from subscription: 10
gptengineer.js:1 [subscriptionStore] Getting daily search count for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 10, searchHistoryCount: 55, timestamp: '2025-04-20T18:52:19.999Z'}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 10, searchHistoryCount: 55, timestamp: '2025-04-20T18:52:20.002Z'}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 10, searchHistoryCount: 55, timestamp: '2025-04-20T18:52:20.007Z'}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 10, searchHistoryCount: 55, timestamp: '2025-04-20T18:52:20.011Z'}
 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using subscription limit: 10
 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
 [subscriptionStore] Got daily search count: 10/10 (types: count=number, limit=number)
 [subscriptionStore] Setting search count to 10 (raw value) and limit to 10
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 (forced refresh)
gptengineer.js:1 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 at 2025-04-20T18:52:20.107Z
gptengineer.js:1 Found subscription: {planId: 'El3UoOu4Luk6JtG1gvjo', userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', status: 'active', startDate: _Timestamp, lastUpdated: _Timestamp, …}
gptengineer.js:1 [subscriptionCoreService] Got searchLimit: 10 (type: number) from subscription
gptengineer.js:1 [subscriptionStore] Found subscription with plan: El3UoOu4Luk6JtG1gvjo
gptengineer.js:1 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
gptengineer.js:1 [subscriptionStore] Setting limits for plan: El3UoOu4Luk6JtG1gvjo {"tailoredResumes":10,"resumes":5,"searches":10,"jobApplications":20,"savedJobs":20}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionStore] Setting search limit from subscription: 10
gptengineer.js:1 [subscriptionStore] Getting daily search count for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using subscription limit: 10
 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
 [subscriptionStore] Got daily search count: 10/10 (types: count=number, limit=number)
 [subscriptionStore] Setting search count to 10 (raw value) and limit to 10
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using subscription limit: 10
 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
 [subscriptionStore] Got daily search count: 10/10 (types: count=number, limit=number)
 [subscriptionStore] Setting search count to 10 (raw value) and limit to 10
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
gptengineer.js:1 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
gptengineer.js:1 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
gptengineer.js:1 [searchTrackingService] Raw count value from database: 10
gptengineer.js:1 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using subscription limit: 10
gptengineer.js:1 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
gptengineer.js:1 [subscriptionDebugger] Got FRESH search count: {count: 10, limit: 10, hasReachedLimit: true, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 10, limit: 10, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useSubscription] Fetching subscription history
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 (forced refresh)
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 (forced refresh)
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [useSubscription] Data fetch completed successfully
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 at 2025-04-20T18:52:20.624Z
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 at 2025-04-20T18:52:20.628Z
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: true, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using subscription limit: 10
 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
 [subscriptionStore] Got daily search count: 10/10 (types: count=number, limit=number)
 [subscriptionStore] Setting search count to 10 (raw value) and limit to 10
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: true, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 (forced refresh)
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-20 at 2025-04-20T18:52:20.794Z
 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using subscription limit: 10
 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
 [subscriptionDebugger] Got FRESH search count: {count: 10, limit: 10, hasReachedLimit: true, countType: 'number', limitType: 'number'}
 [useDailySearchCount] Updated counts: {count: 10, limit: 10, countType: 'number', limitType: 'number'}
 [planCacheService] Using cached plan for El3UoOu4Luk6JtG1gvjo:  {id: 'El3UoOu4Luk6JtG1gvjo', name: 'Essentials', limits: {…}, specificSavedJobsLimit: 20}
 [planCacheService] Found search limit for El3UoOu4Luk6JtG1gvjo: 10
 [searchTrackingService] Found subscription searchLimit: 10 (type: number)
 [searchTrackingService] Raw count value from database: 10
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using subscription limit: 10
 [searchTrackingService] Found search document with count: 10, limit: 10, hasReachedLimit: true
 [subscriptionDebugger] Got FRESH search count: {count: 10, limit: 10, hasReachedLimit: true, countType: 'number', limitType: 'number'}
 [useDailySearchCount] Updated counts: {count: 10, limit: 10, countType: 'number', limitType: 'number'}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: true, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'El3UoOu4Luk6JtG1gvjo', currentPlanId: 'El3UoOu4Luk6JtG1gvjo', currentPlanPrice: 29.95}
 [useFeatureAccess] Refreshed saved jobs count: 20
 [useSubscription] Refreshed saved jobs count: 20
