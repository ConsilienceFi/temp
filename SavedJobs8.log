gptengineer.js:1 [FIREBASE] No existing Firebase apps, initializing...
gptengineer.js:1 [FIREBASE] Firebase app initialized successfully
gptengineer.js:1 [FIREBASE] Firebase auth initialized successfully
gptengineer.js:1 [FIREBASE] Firebase Firestore initialized successfully
gptengineer.js:1 [FIREBASE] Firebase Storage initialized successfully
gptengineer.js:1 [firestoreUtils] Collection names defined as: {INTERVIEW_QUESTIONS: 'interviewQuestions', INTERVIEW_SESSIONS: 'interviewPrepSessions', QUESTION_BANK: 'questionBank', USER_QUESTION_HISTORY: 'userQuestionHistory'}
gptengineer.js:1 [questionStore] Initializing collections on store creation
gptengineer.js:1 [firestoreUtils] Initializing all required collections
gptengineer.js:1 [firestoreUtils] Ensuring collection exists: interviewQuestions
gptengineer.js:1 [firestoreUtils] Got collection reference for: interviewQuestions
gptengineer.js:1 [MAIN] Initializing Firebase before app render
gptengineer.js:1 [FIREBASE] Firebase already initialized, using existing app
gptengineer.js:1 [firestoreUtils] Ensuring collection exists: questionBank
gptengineer.js:1 [firestoreUtils] Got collection reference for: questionBank
gptengineer.js:1 [firestoreUtils] Ensuring collection exists: interviewPrepSessions
gptengineer.js:1 [firestoreUtils] Got collection reference for: interviewPrepSessions
gptengineer.js:1 [firestoreUtils] Ensuring collection exists: userQuestionHistory
gptengineer.js:1 [firestoreUtils] Got collection reference for: userQuestionHistory
gptengineer.js:1 [firestoreUtils] All required collections initialized
gptengineer.js:1 [questionStore] Collections initialized successfully
gptengineer.js:1 [AuthContext] Provider rendering {isLoading: true, isAuthenticated: false, firebaseUserId: undefined, userId: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [SavedJobsPage] Rendering page container
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Auth still loading, deferring fetch
gptengineer.js:1 MainLayout - Auth State: {isAuthenticated: false, isLoading: true, userId: undefined, userName: undefined, isMobile: false}
gptengineer.js:1 [useSubscription] Auth still loading, deferring fetch
gptengineer.js:1 [useSubscription] Auth still loading, deferring fetch
gptengineer.js:1 [AuthContext] Setting up auth state listener
gptengineer.js:1 Auth state changed: Loading saved jobs for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 Initializing saved jobs for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 Loading saved jobs for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [AuthContext] Auth state changed: User is signed in VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [AuthContext] Initial load - setting loading to true
gptengineer.js:1 [AuthContext] Fetching user data from Firestore
gptengineer.js:1 Getting user data for: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [AuthContext] Provider rendering {isLoading: true, isAuthenticated: false, firebaseUserId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', userId: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 User data retrieved successfully
gptengineer.js:1 [AuthContext] User data loaded successfully Adnan Al-Ghourabi
gptengineer.js:1 [AuthContext] New user detected, clearing search state
gptengineer.js:1 [jobStore] Clearing all search state due to auth change
gptengineer.js:1 [AuthContext] Auth store updated with user data
gptengineer.js:1 [AuthContext] Auth state processing complete, setting loading to false
gptengineer.js:1 [AuthContext] Updating authStore loading state
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: false, authLoading: true, userId: undefined, storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: undefined, planId: undefined, currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [AuthContext] Provider rendering {isLoading: false, isAuthenticated: true, firebaseUserId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2'}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [SavedJobsProvider] Initializing
 [useSavedJobsData] Render count: 1
 [SavedJobsProvider] First render
 [SavedJobsProvider] Rendering with context: {jobCount: 0, isLoading: true, limitInfo: {…}}
 [SavedJobsContent] Rendering with jobs: 0
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
 [useSubscription] PlanId changed from undefined to krEnfmvKPme5JTQNZ6Sq, triggering refresh
 [useProfileDbSync] Force refresh called (#1)
gptengineer.js:1 [useProfileDbSync] Directly fetching latest subscription data from Firestore
gptengineer.js:1 [useSubscription] Auth ready, initiating first fetch
gptengineer.js:1 [useSubscription] Fetch skipped - already in progress or unmounted
gptengineer.js:1 [useSavedJobsData] Initial data load triggered
gptengineer.js:1 [useSavedJobsData] Starting data refresh
gptengineer.js:1 Loading saved jobs for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [SavedJobsContext] Skipping subscription check, interval not exceeded
gptengineer.js:1 MainLayout - Auth State: {isAuthenticated: true, isLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', userName: 'Adnan Al-Ghourabi', isMobile: false}
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useSubscription] PlanId changed from undefined to krEnfmvKPme5JTQNZ6Sq, triggering refresh
gptengineer.js:1 [useProfileDbSync] Force refresh called (#1)
gptengineer.js:1 [useProfileDbSync] Directly fetching latest subscription data from Firestore
gptengineer.js:1 [useSubscription] Auth ready, initiating first fetch
gptengineer.js:1 [useSubscription] Fetch skipped - already in progress or unmounted
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useSubscription] PlanId changed from undefined to krEnfmvKPme5JTQNZ6Sq, triggering refresh
gptengineer.js:1 [useProfileDbSync] Force refresh called (#1)
gptengineer.js:1 [useProfileDbSync] Directly fetching latest subscription data from Firestore
gptengineer.js:1 [useSubscription] Auth ready, initiating first fetch
gptengineer.js:1 [useSubscription] Fetch skipped - already in progress or unmounted
gptengineer.js:1 [SavedJobsProvider] Initializing
gptengineer.js:1 [useSavedJobsData] Render count: 2
gptengineer.js:1 [SavedJobsProvider] Re-rendering, jobs: 0
gptengineer.js:1 [SavedJobsProvider] Rendering with context: {jobCount: 0, isLoading: true, limitInfo: {…}}
gptengineer.js:1 [SavedJobsProvider] Initializing
gptengineer.js:1 [useSavedJobsData] Render count: 3
gptengineer.js:1 [SavedJobsProvider] Re-rendering, jobs: 0
gptengineer.js:1 [SavedJobsProvider] Rendering with context: {jobCount: 0, isLoading: true, limitInfo: {…}}
gptengineer.js:1 Actual saved jobs count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2: 1
 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 (forced refresh)
 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 (forced refresh)
 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 (forced refresh)
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 Updated user VDNSMeBPlkP7vzzxxr4uX8Sso9t2 savedJobsCount to 1
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [SavedJobsProvider] Initializing
 [useSavedJobsData] Render count: 4
 [SavedJobsProvider] Re-rendering, jobs: 1
 [SavedJobsProvider] Rendering with context: {jobCount: 1, isLoading: true, limitInfo: {…}}
 [SavedJobsContent] Rendering with jobs: 1
 [useProfileDbSync] Force refresh directly fetched latest plan: krEnfmvKPme5JTQNZ6Sq
 [useProfileDbSync] Skipping update - current plan: krEnfmvKPme5JTQNZ6Sq and new plan: krEnfmvKPme5JTQNZ6Sq are compatible
 [useProfileDbSync] Force refresh directly fetched latest plan: krEnfmvKPme5JTQNZ6Sq
 [useProfileDbSync] Skipping update - current plan: krEnfmvKPme5JTQNZ6Sq and new plan: krEnfmvKPme5JTQNZ6Sq are compatible
 [useProfileDbSync] Force refresh directly fetched latest plan: krEnfmvKPme5JTQNZ6Sq
 [useProfileDbSync] Skipping update - current plan: krEnfmvKPme5JTQNZ6Sq and new plan: krEnfmvKPme5JTQNZ6Sq are compatible
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 at 2025-04-21T01:47:34.167Z
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 at 2025-04-21T01:47:34.170Z
 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 at 2025-04-21T01:47:34.171Z
 Actual saved jobs count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2: 1
 Updated user VDNSMeBPlkP7vzzxxr4uX8Sso9t2 savedJobsCount to 1
 [SavedJobsProvider] Initializing
 [useSavedJobsData] Render count: 5
 [SavedJobsProvider] Re-rendering, jobs: 1
 [SavedJobsProvider] Rendering with context: {jobCount: 1, isLoading: true, limitInfo: {…}}
 [SavedJobsContent] Rendering with jobs: 1
 [planCacheService] Cache miss for plan krEnfmvKPme5JTQNZ6Sq - fetching from database
 [planCacheService] Cache miss for plan krEnfmvKPme5JTQNZ6Sq - fetching from database
 [planCacheService] Cache miss for plan krEnfmvKPme5JTQNZ6Sq - fetching from database
 [planCacheService] Fetched plan from database for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
 [planCacheService] Found savedJobs limit in database: 1 (number)
 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
 [FeatureMatrixService] Initialized matrix with plans: ['krEnfmvKPme5JTQNZ6Sq']
 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
 [searchTrackingService] Raw count value from database: 0
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using document-specific limit: 5
 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
 [subscriptionDebugger] Got FRESH search count: {count: 0, limit: 5, hasReachedLimit: false, countType: 'number', limitType: 'number'}
 [useDailySearchCount] Updated counts: {count: 0, limit: 5, countType: 'number', limitType: 'number'}
 [planCacheService] Fetched plan from database for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
 [planCacheService] Found savedJobs limit in database: 1 (number)
 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
 [FeatureMatrixService] Initialized matrix with plans: ['krEnfmvKPme5JTQNZ6Sq']
 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
 [searchTrackingService] Raw count value from database: 0
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using document-specific limit: 5
 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
 [subscriptionDebugger] Got FRESH search count: {count: 0, limit: 5, hasReachedLimit: false, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 0, limit: 5, countType: 'number', limitType: 'number'}
gptengineer.js:1 [planCacheService] Fetched plan from database for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
gptengineer.js:1 [planCacheService] Found savedJobs limit in database: 1 (number)
gptengineer.js:1 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
gptengineer.js:1 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: ['krEnfmvKPme5JTQNZ6Sq']
gptengineer.js:1 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
gptengineer.js:1 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
gptengineer.js:1 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
gptengineer.js:1 [searchTrackingService] Raw count value from database: 0
gptengineer.js:1 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using document-specific limit: 5
gptengineer.js:1 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
gptengineer.js:1 [subscriptionDebugger] Got FRESH search count: {count: 0, limit: 5, hasReachedLimit: false, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 0, limit: 5, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 0, searchHistoryCount: 0, timestamp: '2025-04-21T01:47:34.767Z'}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 0, searchHistoryCount: 0, timestamp: '2025-04-21T01:47:34.769Z'}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 0, searchHistoryCount: 0, timestamp: '2025-04-21T01:47:34.772Z'}
gptengineer.js:1 [SavedJobsProvider] Initializing
gptengineer.js:1 [useSavedJobsData] Render count: 6
 [SavedJobsProvider] Re-rendering, jobs: 1
 [SavedJobsProvider] Rendering with context: {jobCount: 1, isLoading: false, limitInfo: {…}}
 [SavedJobsContent] Rendering with jobs: 1
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [SavedJobsPage] Rendering job cards, count: 1
 [start of job card] id: 502002928
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
 [useSubscription] Auth ready, initiating first fetch
 [useSubscription] Starting data fetch {userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', path: '/saved-jobs', initialLoadDone: false, userPlanId: 'krEnfmvKPme5JTQNZ6Sq', userIsPremium: false, …}
 [planCacheService] Forcing cache refresh
gptengineer.js:1 [planCacheService] Cache miss or stale - fetching fresh plans
gptengineer.js:1 [subscriptionPlansService] Fetching subscription plans from Firestore
gptengineer.js:1 [FeaturePrompt] Using provided limit override for savedJobs
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2 (forced refresh)
gptengineer.js:1 [useSubscription] Auth ready, initiating first fetch
gptengineer.js:1 [useSubscription] Starting data fetch {userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', path: '/saved-jobs', initialLoadDone: false, userPlanId: 'krEnfmvKPme5JTQNZ6Sq', userIsPremium: false, …}
gptengineer.js:1 [planCacheService] Forcing cache refresh
gptengineer.js:1 [planCacheService] Cache miss or stale - fetching fresh plans
gptengineer.js:1 [subscriptionPlansService] Fetching subscription plans from Firestore
gptengineer.js:1 Fetching resumes for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [JobCard] Using context provided limit info
gptengineer.js:1 JobCard mounted: 502002928, using context: true
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 (forced refresh)
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 (forced refresh)
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [JobCard] Using context provided limit info
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
gptengineer.js:1 [subscriptionPlansService] Successfully fetched 4 plans from Firestore
gptengineer.js:1 [planCacheService] Found free plan by type: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [planCacheService] Fetched plans: (4) [{…}, {…}, {…}, {…}]
gptengineer.js:1 [planCacheService] Initializing feature matrix with fresh plans
gptengineer.js:1 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
gptengineer.js:1 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
gptengineer.js:1 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: ebeWD5tjAUTPEo6Tq81y {name: 'Diamond', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan ebeWD5tjAUTPEo6Tq81y, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Adding plan to matrix: d7pgVke5W5VRe8gVa1Qy {name: 'Platinum', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan d7pgVke5W5VRe8gVa1Qy, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: (4) ['krEnfmvKPme5JTQNZ6Sq', 'El3UoOu4Luk6JtG1gvjo', 'ebeWD5tjAUTPEo6Tq81y', 'd7pgVke5W5VRe8gVa1Qy']
 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
 [FeatureMatrixService] Plan ebeWD5tjAUTPEo6Tq81y has savedJobs limit: 9999
 [FeatureMatrixService] Plan d7pgVke5W5VRe8gVa1Qy has savedJobs limit: 9999
 [planCacheService] Using cached plans
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [start of job card] id: 502002928
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [subscriptionStore] Getting current plan: krEnfmvKPme5JTQNZ6Sq
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: undefined, currentPlanPrice: undefined}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionStore] Loaded 4 plans from cache or Firestore
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [start of job card] id: 502002928
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [JobCard] Using context provided limit info
 [subscriptionStore] Refreshing plan for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
 [subscriptionPlansService] Successfully fetched 4 plans from Firestore
 [planCacheService] Found free plan by type: krEnfmvKPme5JTQNZ6Sq
 [planCacheService] Fetched plans: (4) [{…}, {…}, {…}, {…}]
 [planCacheService] Initializing feature matrix with fresh plans
 [FeatureMatrixService] Set default plan ID to free plan: krEnfmvKPme5JTQNZ6Sq
 [FeatureMatrixService] Adding plan to matrix: krEnfmvKPme5JTQNZ6Sq {name: 'Free', savedJobsLimit: 1}
 [FeatureMatrixService] Converting plan krEnfmvKPme5JTQNZ6Sq, savedJobs: 1
 [FeatureMatrixService] Adding plan to matrix: El3UoOu4Luk6JtG1gvjo {name: 'Essentials', savedJobsLimit: 20}
 [FeatureMatrixService] Converting plan El3UoOu4Luk6JtG1gvjo, savedJobs: 20
 [FeatureMatrixService] Adding plan to matrix: ebeWD5tjAUTPEo6Tq81y {name: 'Diamond', savedJobsLimit: 9999}
 [FeatureMatrixService] Converting plan ebeWD5tjAUTPEo6Tq81y, savedJobs: 9999
 [FeatureMatrixService] Adding plan to matrix: d7pgVke5W5VRe8gVa1Qy {name: 'Platinum', savedJobsLimit: 9999}
gptengineer.js:1 [FeatureMatrixService] Converting plan d7pgVke5W5VRe8gVa1Qy, savedJobs: 9999
gptengineer.js:1 [FeatureMatrixService] Initialized matrix with plans: (4) ['krEnfmvKPme5JTQNZ6Sq', 'El3UoOu4Luk6JtG1gvjo', 'ebeWD5tjAUTPEo6Tq81y', 'd7pgVke5W5VRe8gVa1Qy']
gptengineer.js:1 [FeatureMatrixService] Plan krEnfmvKPme5JTQNZ6Sq has savedJobs limit: 1
gptengineer.js:1 [FeatureMatrixService] Plan El3UoOu4Luk6JtG1gvjo has savedJobs limit: 20
gptengineer.js:1 [FeatureMatrixService] Plan ebeWD5tjAUTPEo6Tq81y has savedJobs limit: 9999
gptengineer.js:1 [FeatureMatrixService] Plan d7pgVke5W5VRe8gVa1Qy has savedJobs limit: 9999
gptengineer.js:1 [subscriptionStore] Refreshing plan for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 Returning resumes: 1
gptengineer.js:1 Fetched resumes: [{…}]
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 at 2025-04-21T01:47:36.193Z
gptengineer.js:1 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 at 2025-04-21T01:47:36.198Z
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 Found subscription: {lastUpdated: _Timestamp, planId: 'krEnfmvKPme5JTQNZ6Sq', userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', searchLimit: 5, status: 'active', …}
 [subscriptionCoreService] Got searchLimit: 5 (type: number) from subscription
 [subscriptionStore] Found subscription with plan: krEnfmvKPme5JTQNZ6Sq
 [planCacheService] Using cached plan for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
 [subscriptionStore] Setting limits for plan: krEnfmvKPme5JTQNZ6Sq {"tailoredResumes":0,"jobApplications":5,"searches":5,"resumes":1,"savedJobs":1}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [start of job card] id: 502002928
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
 [subscriptionStore] Setting search limit from subscription: 5
 [subscriptionStore] Getting daily search count for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 Found subscription: {lastUpdated: _Timestamp, planId: 'krEnfmvKPme5JTQNZ6Sq', userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', searchLimit: 5, status: 'active', …}
gptengineer.js:1 [subscriptionCoreService] Got searchLimit: 5 (type: number) from subscription
gptengineer.js:1 [subscriptionStore] Found subscription with plan: krEnfmvKPme5JTQNZ6Sq
gptengineer.js:1 [planCacheService] Using cached plan for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
gptengineer.js:1 [subscriptionStore] Setting limits for plan: krEnfmvKPme5JTQNZ6Sq {"tailoredResumes":0,"jobApplications":5,"searches":5,"resumes":1,"savedJobs":1}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionStore] Setting search limit from subscription: 5
gptengineer.js:1 [subscriptionStore] Getting daily search count for user: VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [planCacheService] Using cached plan for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
gptengineer.js:1 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
gptengineer.js:1 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
gptengineer.js:1 [searchTrackingService] Raw count value from database: 0
gptengineer.js:1 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using document-specific limit: 5
gptengineer.js:1 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
gptengineer.js:1 [subscriptionDebugger] Got FRESH search count: {count: 0, limit: 5, hasReachedLimit: false, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 0, limit: 5, countType: 'number', limitType: 'number'}
gptengineer.js:1 [planCacheService] Using cached plan for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
gptengineer.js:1 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
gptengineer.js:1 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
gptengineer.js:1 [searchTrackingService] Raw count value from database: 0
gptengineer.js:1 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using document-specific limit: 5
gptengineer.js:1 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
gptengineer.js:1 [subscriptionDebugger] Got FRESH search count: {count: 0, limit: 5, hasReachedLimit: false, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 0, limit: 5, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 0, searchHistoryCount: 0, timestamp: '2025-04-21T01:47:36.716Z'}
gptengineer.js:1 [subscriptionDebugger] Collection comparison: {userSearches: {…}, searchHistory: {…}, userSearchCount: 0, searchHistoryCount: 0, timestamp: '2025-04-21T01:47:36.718Z'}
 [planCacheService] Using cached plan for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
 [searchTrackingService] Raw count value from database: 0
 [searchTrackingService] Raw count value TYPE: number
 [searchTrackingService] Using document-specific limit: 5
 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
 [subscriptionStore] Got daily search count: 0/5 (types: count=number, limit=number)
 [subscriptionStore] Setting search count to 0 (raw value) and limit to 5
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [planCacheService] Using cached plan for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
gptengineer.js:1 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
gptengineer.js:1 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
gptengineer.js:1 [searchTrackingService] Raw count value from database: 0
gptengineer.js:1 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using document-specific limit: 5
gptengineer.js:1 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
gptengineer.js:1 [subscriptionStore] Got daily search count: 0/5 (types: count=number, limit=number)
gptengineer.js:1 [subscriptionStore] Setting search count to 0 (raw value) and limit to 5
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [subscriptionDebugger] Getting FRESH current search count for VDNSMeBPlkP7vzzxxr4uX8Sso9t2
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 (forced refresh)
gptengineer.js:1 [searchTrackingService] Getting search count for user VDNSMeBPlkP7vzzxxr4uX8Sso9t2, doc ID: VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 (forced refresh)
gptengineer.js:1 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 at 2025-04-21T01:47:36.957Z
gptengineer.js:1 [SearchRepository] Getting fresh data for VDNSMeBPlkP7vzzxxr4uX8Sso9t2_2025-04-21 at 2025-04-21T01:47:36.960Z
gptengineer.js:1 [planCacheService] Using cached plan for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
gptengineer.js:1 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
gptengineer.js:1 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
gptengineer.js:1 [searchTrackingService] Raw count value from database: 0
gptengineer.js:1 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using document-specific limit: 5
gptengineer.js:1 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
gptengineer.js:1 [subscriptionDebugger] Got FRESH search count: {count: 0, limit: 5, hasReachedLimit: false, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 0, limit: 5, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useSubscription] Fetching subscription history
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [start of job card] id: 502002928
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [planCacheService] Using cached plan for krEnfmvKPme5JTQNZ6Sq:  {id: 'krEnfmvKPme5JTQNZ6Sq', name: 'Free', limits: {…}, specificSavedJobsLimit: 1}
gptengineer.js:1 [planCacheService] Found search limit for krEnfmvKPme5JTQNZ6Sq: 5
gptengineer.js:1 [searchTrackingService] Found subscription searchLimit: 5 (type: number)
gptengineer.js:1 [searchTrackingService] Raw count value from database: 0
gptengineer.js:1 [searchTrackingService] Raw count value TYPE: number
gptengineer.js:1 [searchTrackingService] Using document-specific limit: 5
gptengineer.js:1 [searchTrackingService] Found search document with count: 0, limit: 5, hasReachedLimit: false
gptengineer.js:1 [subscriptionDebugger] Got FRESH search count: {count: 0, limit: 5, hasReachedLimit: false, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useDailySearchCount] Updated counts: {count: 0, limit: 5, countType: 'number', limitType: 'number'}
gptengineer.js:1 [useSubscription] Fetching subscription history
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: true, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Data fetch completed successfully
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: true, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: false, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [UpgradeModal] Rendering with values: {limitType: 'searches', currentCount: 0, limit: 0, isOpen: false, isLoading: false}
gptengineer.js:1 [useSubscription] Data fetch completed successfully
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: true, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
gptengineer.js:1 [start of job card] id: 502002928
gptengineer.js:1 [useSubscription] Init - Auth status: {isAuthenticated: true, authLoading: false, userId: 'VDNSMeBPlkP7vzzxxr4uX8Sso9t2', storeIsLoading: false, initialLoadDone: true, …}
gptengineer.js:1 [useSubscription] Premium status determined: {isPremium: false, userIsPremium: false, planId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanId: 'krEnfmvKPme5JTQNZ6Sq', currentPlanPrice: 0}
